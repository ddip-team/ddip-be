version: '3'

services:
  node-exporter:
    image: prom/node-exporter:v1.7.0
    container_name: node-exporter
    ports:
      - 9100:9100
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:v2.48.0
    container_name: prometheus
    ports:
      - 9090:9090
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.enable-lifecycle'
      - '--storage.tsdb.min-block-duration=2h'
      - '--storage.tsdb.max-block-duration=2h'
      - '--storage.tsdb.retention.time=4h'
    volumes:
      - ./prometheus/config:/etc/prometheus
      - ./prometheus/data:/prometheus/data
    restart: unless-stopped
    networks:
      - monitoring

  thanos-sidecar:
    image: thanosio/thanos:v0.32.5
    platform: linux/amd64
    container_name: thanos-sidecar
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - S3_BUCKET=${S3_BUCKET}
    command:
      - 'sidecar'
      - '--tsdb.path=/prometheus/data'
      - '--objstore.config-file=/etc/thanos/storage.yml'
      - '--prometheus.url=http://prometheus:9090'
    volumes:
      - ./prometheus/data:/prometheus/data
      - ./thanos/storage.yml:/etc/thanos/storage.yml
    restart: unless-stopped
    networks:
      - monitoring

  thanos-store:
    image: thanosio/thanos:v0.32.5
    platform: linux/amd64
    container_name: thanos-store
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - S3_BUCKET=${S3_BUCKET}
    command:
      - 'store'
      - '--data-dir=/thanos/store'
      - '--objstore.config-file=/etc/thanos/storage.yml'
    volumes:
      - ./thanos/store:/thanos/store
      - ./thanos/storage.yml:/etc/thanos/storage.yml
    restart: unless-stopped
    networks:
      - monitoring

  thanos-querier:
    image: thanosio/thanos:v0.32.5
    platform: linux/amd64
    container_name: thanos-querier
    ports:
      - 10904:10904
    command:
      - 'query'
      - '--http-address=0.0.0.0:10904'
      - '--grpc-address=0.0.0.0:10903'
      - '--store=thanos-sidecar:10901'
      - '--store=thanos-store:10901'
    networks:
      - monitoring
    restart: unless-stopped

  grafana:
    image: grafana/grafana:10.2.2
    container_name: grafana
    ports:
      - 9900:3000
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ./grafana/data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    restart: unless-stopped
    networks:
      - monitoring

networks:
  monitoring:
    driver: bridge